name: Cross-Platform Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 快速Linux测试
  quick-test:
    runs-on: ubuntu-latest
    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: ⚡ Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
        
    - name: 📦 Install dependencies
      run: uv sync --dev
        
    - name: 🧪 Quick validation
      run: uv run python validate_project.py
      
    - name: 🔨 Test build
      run: uv build --no-sources

  # 跨平台测试
  cross-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # 排除一些不必要的组合以节省资源
          - os: macos-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.8'
        
    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: ⚡ Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
        
    - name: 📦 Install dependencies
      run: uv sync --dev
        
    - name: 🧪 Run validation (Cross-platform)
      run: uv run python validate_project.py
      
    - name: 📊 Import test
      run: |
        uv run python -c "
        import sys
        import os
        sys.path.insert(0, os.getcwd())
        
        try:
            import llm_flow_engine
            from llm_flow_engine import FlowEngine, ModelConfigProvider
            print('[PASS] Import test passed on ${{ matrix.os }} Python ${{ matrix.python-version }}')
        except ImportError as e:
            print(f'[FAIL] Import test failed: {e}')
            sys.exit(1)
        "
      env:
        PYTHONIOENCODING: utf-8
