name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
        
    - name: 🔍 Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: 🧪 Run tests
      run: |
        if [ -f "validate_project.py" ]; then
          python validate_project.py
        fi
        
    - name: 📊 Test import
      run: |
        python -c "
        import sys
        import os
        sys.path.insert(0, os.getcwd())
        
        try:
            import llm_flow_engine
            from llm_flow_engine import FlowEngine, ModelConfigProvider
            print('✅ Import test passed')
        except ImportError as e:
            print(f'❌ Import test failed: {e}')
            sys.exit(1)
        "
        
    - name: 🔨 Test build
      run: |
        pip install build
        python -m build
        
    - name: 🔍 Test package
      run: |
        pip install twine
        python -m twine check dist/*
